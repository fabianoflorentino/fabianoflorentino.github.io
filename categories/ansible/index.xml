<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ansible on Home</title>
    <link>http://localhost/categories/ansible/</link>
    <description>Recent content in ansible on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 14 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost/categories/ansible/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Criando um ambiente de desenvolvimento para o Ansible</title>
      <link>http://localhost/posts/2020-01-14-ansible_02/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/posts/2020-01-14-ansible_02/</guid>
      <description>A alguns dias atrás nosso mestre @gomex abriu uma thread no twitter sobre como é estar desenvolvendo infraestrutura hoje em dia pelo time de Ops Link e como isso é libertador, e de fato, é uma sensação sem igual para um Sysadmin.
Como várias pessoas comentaram eu também não pude deixar de participar. :D,
Na ocasião por coincidência estava desenvolvendo uma imagem de container docker para o ansible!
Mas por quê?</description>
    </item>
    
    <item>
      <title>HAProxy LoadBalancer em HA com Keepalived Automatizado</title>
      <link>http://localhost/posts/2020-01-07-ansible_01/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://localhost/posts/2020-01-07-ansible_01/</guid>
      <description>Toda a infraestrutura de TI hoje seja ela Cloud ou on-premise utiliza balanceadores de carga como a sua porta de entrada. Hoje acredito que todos os provedores de serviço de Cloud com salve exceções não fornecem esse tipo de serviço.
Mas e na infraestrutura on-premise como implementamos isso?
Nesse artigo trago a configuração do HAProxy em HA com Keepalived automatizado com ansible. Uma solução simples e bastante robusta dependendo da sua infraestrutura.</description>
    </item>
    
  </channel>
</rss>